{
  "openapi": "3.1.0",
  "info": {
    "title": "Asserto AI - API",
    "description": "API for Asserto  AI",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://app.asserto.ai",
      "description": "Production server"
    }
  ],
  "paths": {
    "/api/prompts": {
      "get": {
        "tags": [
          "API"
        ],
        "summary": "Prompt List",
        "description": "Get all project's prompts. The project is given by its API key.",
        "operationId": "prompts_list_api_prompts_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API Key in the format: `Authorization: ApiKey <key>`",
              "title": "Authorization"
            },
            "description": "API Key in the format: `Authorization: ApiKey <key>`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/prompts/{slug}": {
      "get": {
        "tags": [
          "API"
        ],
        "summary": "Prompt by Slug",
        "description": "Get single prompt by slug.\n\nGet only major versions",
        "operationId": "prompts_get_api_prompts__slug__get",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Slug"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API Key in the format: `Authorization: ApiKey <key>`",
              "title": "Authorization"
            },
            "description": "API Key in the format: `Authorization: ApiKey <key>`"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ContentText": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "text"
            ],
            "const": "text",
            "title": "Type"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "type",
          "text"
        ],
        "title": "ContentText"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ModelInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ModelInfo"
      },
      "PromptListResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PromptResponse"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "PromptListResponse"
      },
      "PromptMessageMCP": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role"
          },
          "content": {
            "$ref": "#/components/schemas/ContentText"
          }
        },
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "PromptMessageMCP",
        "description": "prompt message as used in MCP protocol"
      },
      "PromptResponse": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/PromptMessageMCP"
            },
            "type": "array",
            "title": "Messages"
          },
          "variables": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Variables"
          },
          "model": {
            "$ref": "#/components/schemas/ModelInfo"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature"
          }
        },
        "type": "object",
        "required": [
          "slug",
          "messages",
          "variables",
          "model",
          "temperature"
        ],
        "title": "PromptResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}
